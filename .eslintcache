[{"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\delivery.js":"1","C:\\Users\\Sanjeet\\Desktop\\support\\src\\index.js":"2","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\insert.js":"3","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\main.js":"4","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\mandi.js":"5","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\fruit.js":"6","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\milk.js":"7","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\vegetable.js":"8","C:\\Users\\Sanjeet\\Desktop\\support\\src\\baseUrl.js":"9","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\orders.js":"10","C:\\Users\\Sanjeet\\Desktop\\support\\src\\reportWebVitals.js":"11","C:\\Users\\Sanjeet\\Desktop\\support\\src\\App.js":"12","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\monthlymanage.js":"13","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\yearlymanage.js":"14","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\manage.js":"15","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\dailymanage.js":"16"},{"size":4976,"mtime":1625207513960,"results":"17","hashOfConfig":"18"},{"size":641,"mtime":1609516276720,"results":"19","hashOfConfig":"18"},{"size":11269,"mtime":1625202844419,"results":"20","hashOfConfig":"18"},{"size":3144,"mtime":1625238203579,"results":"21","hashOfConfig":"18"},{"size":10167,"mtime":1616666845466,"results":"22","hashOfConfig":"18"},{"size":10168,"mtime":1616664735726,"results":"23","hashOfConfig":"18"},{"size":10171,"mtime":1616664636848,"results":"24","hashOfConfig":"18"},{"size":10199,"mtime":1616664527993,"results":"25","hashOfConfig":"18"},{"size":157,"mtime":1616700294439,"results":"26","hashOfConfig":"18"},{"size":3155,"mtime":1618514658331,"results":"27","hashOfConfig":"18"},{"size":362,"mtime":1609089041974,"results":"28","hashOfConfig":"18"},{"size":349,"mtime":1609516203220,"results":"29","hashOfConfig":"18"},{"size":3359,"mtime":1625236983029,"results":"30","hashOfConfig":"18"},{"size":0,"mtime":1625237006169,"results":"31","hashOfConfig":"18"},{"size":1770,"mtime":1625244612030,"results":"32","hashOfConfig":"18"},{"size":0,"mtime":1625237017985,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1v2ed5v",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","errorCount":3,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\delivery.js",["80","81","82","83","84","85","86","87","88","89","90","91"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label,Alert } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n    import { confirmAlert } from 'react-confirm-alert'; \r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \r\nimport {baseUrl} from '../baseUrl';\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Delivery extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delivered=this.delivered.bind(this);\r\n    this.cancel=this.cancel.bind(this);\r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( baseUrl+'/delivery')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\ndelivered(data){\r\n    confirmAlert({\r\n        title: 'Confirm to submit',\r\n        message: 'Are you sure to do this.',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n                const obj={\r\n                    id:data,\r\n                    status:\"Delivered\"\r\n                }\r\n               fetch( baseUrl+'/delivery',{\r\n                method:\"PUT\",\r\n                headers:{ \"Content-Type\":\"application/json\"},\r\n                body:JSON.stringify(obj)\r\n              \r\n            })\r\n            .then(data=>data.json())\r\n            .then(data=>alert(\"updated\"))\r\n            .catch(err=>console.log(err))\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => console.log(\"cancelled\")\r\n          }\r\n        ]\r\n      });\r\n   \r\n\r\n\r\n}\r\n\r\ncancel(data){\r\n  confirmAlert({\r\n      title: 'Confirm to cancel',\r\n      message: 'Are you sure to do this.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n              const obj={\r\n                  id:data,\r\n                  status:\"Cancelled\"\r\n              }\r\n             fetch(baseUrl+ '/delivery',{\r\n              method:\"PUT\",\r\n              headers:{ \"Content-Type\":\"application/json\"},\r\n              body:JSON.stringify(obj)\r\n            \r\n          })\r\n          .then(data=>data.json())\r\n          .then(data=>alert(\"updated\"))\r\n          .catch(err=>console.log(err))\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => console.log(\"cancelled\")\r\n        }\r\n      ]\r\n    });\r\n \r\n\r\n\r\n}\r\n  render() {\r\n    //  Alert(this.state.item)\r\n      const items=this.state.item.map((data)=>{\r\n       \r\n                return(\r\n                  <div style={{marginBottom:30}}>\r\n               <div style={{display:'flex'}}>\r\n          \r\n               <p style={{margin:0,padding:0 ,marginRight:5,color:'red'}}>{data.fullname} </p>\r\n               <p style={{margin:0,padding:0 ,marginRight:5}}> {data.telnum} </p>\r\n               <p style={{margin:0,padding:0 ,color:'red'}}>  {data.time}</p>\r\n\r\n               </div>\r\n               <p style={{margin:0,padding:0}}>{data.remark}</p>\r\n\r\n               <p style={{margin:0,padding:0}}>{data.date}</p>\r\n               <p style={{margin:0,padding:0,color:'blue'}}>{data.houseno} {data.area}</p>\r\n               <p style={{margin:0,padding:0,marginBottom:5}}>{data.payment}</p>\r\n                    \r\n               <h4>orders</h4>\r\n               {data.item.map((hello)=>{\r\n                   return(\r\n                       <div style={{marginBottom:5}}>\r\n                         <div style={{display:'flex'}}>\r\n                   <p style={{margin:0,padding:0,color:'blue',marginRight:5}}>{hello.name} </p>\r\n                   <p style={{margin:0,padding:0,marginRight:5}}> {hello.brand} </p>\r\n                   <p style={{margin:0,padding:0}}> Cost:{hello.cost}</p>\r\n                  </div>\r\n\r\n                  <div style={{display:'flex'}}>\r\n                   <p style={{margin:0,padding:0,marginRight:3,color:'red'}}>{hello.weight} </p>\r\n                   <p>X</p>\r\n                   <p style={{margin:0,padding:0,color:'red',marginLeft:2}}> {hello.quantity}</p>\r\n                </div>\r\n                   </div>\r\n                   )\r\n               })}\r\n             \r\n               <p style={{margin:0,padding:0}}>Total Cost: {data.price}</p>\r\n               <Button onClick={()=>this.delivered(data._id)} style={{marginRight:10}} >Delivered</Button>\r\n               \r\n               <Button onClick={()=>this.cancel(data._id)} >Cancel </Button>\r\n             \r\n               <hr/>\r\n               </div>\r\n               \r\n                )\r\n              \r\n      });\r\n       \r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Delivery;\r\n",["92","93"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\index.js",[],["94","95"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\insert.js",["96","97","98","99","100","101","102","103","104","105"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Insert extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            order:[]\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.manage=this.manage.bind(this);\r\n    }\r\n    manage()\r\n    {\r\n        alert(\"hello\")\r\n    }\r\n\r\n    handleSubmit(values) {\r\n       \r\n      \r\n         \r\n          var obj={\r\n            name:values.name,\r\n            description: values.description,\r\n            itemid: values.category+values.name,\r\n            img: values.img,\r\n            brand:values.character,\r\n            cost:values.cost,\r\n            weight:values.weight,\r\n            quantity:\"1\",\r\n            category:values.category\r\n          }\r\n\r\n         fetch( 'https://urbanreach.herokuapp.com/items',{\r\n            method:\"POST\",\r\n            headers:{ \"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(obj)\r\n          \r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>alert(data.status))\r\n        .catch(err=>console.log(err))\r\n   \r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                   <div  style={{flexDirection:'row'}}>\r\n                      <h3>Insert Page</h3>\r\n                     \r\n                   \r\n                      <Link to={`/vegetable`} >\r\n                      <Button  style={{margin:20}}> Vegetable</Button>\r\n                      </Link>\r\n                      <Link to={`/fruit`} >\r\n                        <Button style={{margin:20}} >Fruit</Button>\r\n                      </Link>\r\n                     \r\n                      <Link to={`/mandi`} >\r\n                        <Button style={{margin:20}} >Mandi</Button>\r\n                      </Link>\r\n                     <Link to={`/milkproduct`} >\r\n                        <Button style={{margin:20}} >Milk Product</Button>\r\n                    </Link>\r\n                    <Link to={`/orders`} >\r\n                        <Button style={{margin:20}} >Orders</Button>\r\n                    </Link>\r\n                    <Link to={`/management`} >\r\n                        <Button style={{margin:20}} >Management</Button>\r\n                    </Link>\r\n\r\n                    <hr/>\r\n                    <Link to={`/delivery`} >\r\n                        <Button style={{margin:20}} >Delivery</Button>\r\n                    </Link>\r\n                   \r\n                   \r\n                      <hr/>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\"> Name</Label>\r\n                                \r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(18)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                            maxLength: 'Must be 18 characters or less'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n                                 \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"character\" >Items character</Label>\r\n                                \r\n                                    <Control.text model=\".character\" id=\"character\" name=\"character\"\r\n                                        placeholder=\"size:small\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(5)\r\n                                        }}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".character\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 5 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n\r\n                               <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"category\" >Category </Label>\r\n                                    <Control.select model=\".category\" id=\"category\" name=\"category\"\r\n                                        placeholder=\"category\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue=\"vegetable\"\r\n                                        > \r\n                                         <option value=\"vegetable\">vegetable</option>\r\n                                         <option value=\"milkproduct\">milkproduct</option>\r\n                                         <option value=\"fruit\">fruit</option>\r\n                                         <option value=\"special\">mandi</option>\r\n                                         <option value=\"festival\">festival</option>\r\n                                        </Control.select>\r\n                           </Row>\r\n                         \r\n                          \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Add\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n               </div>\r\n\r\n               </div>\r\n        );\r\n    }\r\n}\r\n   \r\n\r\n\r\nexport default Insert;\r\n",["106","107"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\main.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\mandi.js",["108","109","110","111","112","113","114","115","116","117","118","119"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n    import {baseUrl} from '../baseUrl';\r\n\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Mandi extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delete=this.delete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( baseUrl+'/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nhandleSubmit({values,item}) {\r\n       \r\n    \r\n    \r\n\r\n      \r\n    var obj={\r\n      description: values.description,\r\n      itemid:item.itemid,\r\n      img: values.img,\r\n      cost:values.cost,\r\n      weight:values.weight,\r\n      status:values.status,\r\n      state:values.state,\r\n      brand:values.brand\r\n    }\r\n\r\n   fetch( baseUrl+'/items',{\r\n      method:\"PUT\",\r\n      headers:{ \"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(obj)\r\n    \r\n  })\r\n  .then(data=>data.json())\r\n  .then(data=>alert(\"updated\"))\r\n  .catch(err=>console.log(err))\r\n};\r\n\r\ndelete(data)\r\n{\r\n    fetch(baseUrl+'/items',{\r\n        method:\"DELETE\",\r\n        headers:{ \"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify({itemid:data})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>alert(data))\r\n    .catch(err=>console.log(err))\r\n}\r\n  render() {\r\n\r\n    const items=this.state.item.filter((item)=>item.category==\"special\").map((item)=>{\r\n\r\n        return(\r\n    \r\n          <div >\r\n         \r\n             <img src={item.img} alt=\"\"/>\r\n    \r\n             \r\n             <h4 >{item.name}</h4>\r\n             <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit({values,item})}>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        defaultValue={item.description}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n                               <Row className=\"form-group\">\r\n                            <Label htmlFor=\"brand\" >character</Label>\r\n                                \r\n                                    <Control.text model=\".brand\" id=\"brand\" name=\"brand\"\r\n                                        placeholder=\"brand\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(5)\r\n                                        }}\r\n                                        defaultValue={item.brand }\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".brand\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 5 letters'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.img}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.cost}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             defaultValue={item.weight}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n\r\n<Row className=\"form-group\" >\r\n                                <Label htmlFor=\"state\" >State </Label>\r\n                                    <Control.select model=\".state\" id=\"state\" name=\"state\"\r\n                                        placeholder=\"state\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.state}\r\n                                        > \r\n                                         <option value=\"on\">on</option>\r\n                                         <option value=\"off\">off</option>\r\n                                        \r\n                                        </Control.select>\r\n                           </Row>\r\n                              \r\n                           <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"status\" >Status </Label>\r\n                                    <Control.select model=\".status\" id=\"status\" name=\"status\"\r\n                                        placeholder=\"status\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.status}\r\n                                        > \r\n                                         <option value=\"Trending\">Trending</option>\r\n                                         <option value=\"Offers\">Offers</option>\r\n                                         <option value=\"Normal\">Normal</option>\r\n                                        </Control.select>\r\n                           </Row>\r\n                         \r\n              \r\n                              \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n           \r\n            \r\n\r\n\r\n           <Button onClick={()=>this.delete(item.itemid)} >Delete</Button>\r\n           <hr/>\r\n          </div>\r\n    \r\n    \r\n        )\r\n      })\r\n\r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Mandi;\r\n","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\fruit.js",["120","121","122","123","124","125","126","127","128","129","130","131"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n    import {baseUrl} from '../baseUrl';\r\n\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Fruit extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delete=this.delete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch(  baseUrl+'/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nhandleSubmit({values,item}) {\r\n       \r\n    \r\n    \r\n\r\n      \r\n    var obj={\r\n      description: values.description,\r\n      itemid:item.itemid,\r\n      img: values.img,\r\n      cost:values.cost,\r\n      weight:values.weight,\r\n      status:values.status,\r\n      brand:values.brand,\r\n      state:values.state\r\n    }\r\n\r\n   fetch(  baseUrl+'/items',{\r\n      method:\"PUT\",\r\n      headers:{ \"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(obj)\r\n    \r\n  })\r\n  .then(data=>data.json())\r\n  .then(data=>alert(\"updated\"))\r\n  .catch(err=>console.log(err))\r\n};\r\n\r\ndelete(data)\r\n{\r\n    fetch( baseUrl+'/items',{\r\n        method:\"DELETE\",\r\n        headers:{ \"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify({itemid:data})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>alert(data))\r\n    .catch(err=>console.log(err))\r\n}\r\n  render() {\r\n\r\n    const items=this.state.item.filter((item)=>item.category==\"fruit\").map((item)=>{\r\n\r\n        return(\r\n    \r\n          <div >\r\n         \r\n             <img src={item.img} alt=\"\"/>\r\n    \r\n             \r\n             <h4 >{item.name}</h4>\r\n             <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit({values,item})}>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        defaultValue={item.description}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n                               <Row className=\"form-group\">\r\n                            <Label htmlFor=\"brand\" >character</Label>\r\n                                \r\n                                    <Control.text model=\".brand\" id=\"brand\" name=\"brand\"\r\n                                        placeholder=\"brand\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(5)\r\n                                        }}\r\n                                        defaultValue={item.brand }\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".brand\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 5 letters'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.img}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.cost}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             defaultValue={item.weight}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n<Row className=\"form-group\" >\r\n                                <Label htmlFor=\"state\" >State </Label>\r\n                                    <Control.select model=\".state\" id=\"state\" name=\"state\"\r\n                                        placeholder=\"state\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.state}\r\n                                        > \r\n                                         <option value=\"on\">on</option>\r\n                                         <option value=\"off\">off</option>\r\n                                        \r\n                                        </Control.select>\r\n                           </Row>\r\n\r\n                              \r\n                           <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"status\" >Status </Label>\r\n                                    <Control.select model=\".status\" id=\"status\" name=\"status\"\r\n                                        placeholder=\"status\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.status}\r\n                                        > \r\n                                         <option value=\"Trending\">Trending</option>\r\n                                         <option value=\"Offers\">Offers</option>\r\n                                         <option value=\"Normal\">Normal</option>\r\n                                        </Control.select>\r\n                           </Row>\r\n                         \r\n              \r\n                              \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n           \r\n            \r\n\r\n\r\n           <Button onClick={()=>this.delete(item.itemid)} >Delete</Button>\r\n           <hr/>\r\n          </div>\r\n    \r\n    \r\n        )\r\n      })\r\n\r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Fruit;\r\n",["132","133"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\milk.js",["134","135","136","137","138","139","140","141","142","143","144","145"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n    import {baseUrl} from '../baseUrl';\r\n\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Milk extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delete=this.delete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( baseUrl+'/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nhandleSubmit({values,item}) {\r\n       \r\n    \r\n    \r\n\r\n      \r\n    var obj={\r\n      description: values.description,\r\n      itemid:item.itemid,\r\n      img: values.img,\r\n      cost:values.cost,\r\n      weight:values.weight,\r\n      status:values.status,\r\n      state:values.state,\r\n      brand:values.brand\r\n    }\r\n\r\n   fetch(  baseUrl+'/items',{\r\n      method:\"PUT\",\r\n      headers:{ \"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(obj)\r\n    \r\n  })\r\n  .then(data=>data.json())\r\n  .then(data=>alert(\"updated\"))\r\n  .catch(err=>console.log(err))\r\n};\r\n\r\ndelete(data)\r\n{\r\n    fetch( baseUrl+'/items',{\r\n        method:\"DELETE\",\r\n        headers:{ \"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify({itemid:data})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>alert(data))\r\n    .catch(err=>console.log(err))\r\n}\r\n  render() {\r\n\r\n    const items=this.state.item.filter((item)=>item.category==\"milkproduct\").map((item)=>{\r\n  \r\n        return(\r\n    \r\n          <div >\r\n         \r\n             <img src={item.img} alt=\"\"/>\r\n    \r\n             \r\n             <h4 >{item.name}</h4>\r\n             <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit({values,item})}>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        defaultValue={item.description}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n                               <Row className=\"form-group\">\r\n                            <Label htmlFor=\"brand\" >character</Label>\r\n                                \r\n                                    <Control.text model=\".brand\" id=\"brand\" name=\"brand\"\r\n                                        placeholder=\"brand\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(5)\r\n                                        }}\r\n                                        defaultValue={item.brand }\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".brand\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 5 letters'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.img}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.cost}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             defaultValue={item.weight}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n\r\n<Row className=\"form-group\" >\r\n                                <Label htmlFor=\"state\" >State </Label>\r\n                                    <Control.select model=\".state\" id=\"state\" name=\"state\"\r\n                                        placeholder=\"state\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.state}\r\n                                        > \r\n                                         <option value=\"on\">on</option>\r\n                                         <option value=\"off\">off</option>\r\n                                        \r\n                                        </Control.select>\r\n                           </Row>\r\n                              \r\n                           <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"status\" >Status </Label>\r\n                                    <Control.select model=\".status\" id=\"status\" name=\"status\"\r\n                                        placeholder=\"status\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.status}\r\n                                        > \r\n                                         <option value=\"Trending\">Trending</option>\r\n                                         <option value=\"Offers\">Offers</option>\r\n                                         <option value=\"Normal\">Normal</option>\r\n                                        </Control.select>\r\n                           </Row>\r\n                         \r\n              \r\n                              \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n           \r\n            \r\n\r\n\r\n           <Button onClick={()=>this.delete(item.itemid)} >Delete</Button>\r\n           <hr/>\r\n          </div>\r\n    \r\n    \r\n        )\r\n      })\r\n\r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Milk;\r\n","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\vegetable.js",["146","147","148","149","150","151","152","153","154","155","156","157"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../baseUrl';\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Vegetable extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delete=this.delete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( baseUrl+'/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nhandleSubmit({values,item}) {\r\n       \r\n    \r\n    \r\n\r\n      \r\n    var obj={\r\n      description: values.description,\r\n      img: values.img,\r\n      cost:values.cost,\r\n      weight:values.weight,\r\n      status:values.status,\r\n      state:values.state,\r\n      brand:values.brand,\r\n      itemid:item.itemid\r\n    }\r\n    console.log(obj)\r\n\r\n   fetch(  baseUrl+'/items',{\r\n      method:\"PUT\",\r\n      headers:{ \"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(obj)\r\n    \r\n  })\r\n  .then(data=>data.json())\r\n  .then(data=>alert(\"updated\"))\r\n  .catch(err=>console.log(err))\r\n};\r\n\r\ndelete(data)\r\n{\r\n    fetch( baseUrl+'/items',{\r\n        method:\"DELETE\",\r\n        headers:{ \"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify({itemid:data})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>alert(data))\r\n    .catch(err=>console.log(err))\r\n}\r\n  render() {\r\n\r\n    const items=this.state.item.filter((item)=>item.category==\"vegetable\").map((item)=>{\r\n\r\n  \r\n        return(\r\n    \r\n          <div >\r\n         \r\n             <img src={item.img} alt=\"\"/>\r\n    \r\n             \r\n             <h4 >{item.name}</h4>\r\n             <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit({values,item})}>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        defaultValue={item.description}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n                               <Row className=\"form-group\">\r\n                            <Label htmlFor=\"brand\" >character</Label>\r\n                                \r\n                                    <Control.text model=\".brand\" id=\"brand\" name=\"brand\"\r\n                                        placeholder=\"brand\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(5)\r\n                                        }}\r\n                                        defaultValue={item.brand }\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".brand\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 5 letters'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.img}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.cost}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             defaultValue={item.weight}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n\r\n<Row className=\"form-group\" >\r\n                                <Label htmlFor=\"state\" >State </Label>\r\n                                    <Control.select model=\".state\" id=\"state\" name=\"state\"\r\n                                        placeholder=\"state\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.state}\r\n                                        > \r\n                                         <option value=\"on\">on</option>\r\n                                         <option value=\"off\">off</option>\r\n                                        \r\n                                        </Control.select>\r\n                           </Row>\r\n                              \r\n                           <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"status\" >Status </Label>\r\n                                    <Control.select model=\".status\" id=\"status\" name=\"status\"\r\n                                        placeholder=\"status\"\r\n                                        className=\"form-control\"  \r\n                                        defaultValue={item.status}\r\n                                        > \r\n                                         <option value=\"Trending\">Trending</option>\r\n                                         <option value=\"Offers\">Offers</option>\r\n                                         <option value=\"Normal\">Normal</option>\r\n                                        </Control.select>\r\n                           </Row>\r\n                         \r\n              \r\n                              \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n           \r\n            \r\n\r\n\r\n           <Button onClick={()=>this.delete(item.itemid)} >Delete</Button>\r\n           <hr/>\r\n          </div>\r\n    \r\n    \r\n        )\r\n      })\r\n\r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Vegetable;\r\n",["158","159"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\baseUrl.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\orders.js",["160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label,Alert } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n    import { confirmAlert } from 'react-confirm-alert'; \r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \r\nimport {baseUrl} from '../baseUrl';\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Orders extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( baseUrl+'/delivery/display')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data.reverse()})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\n\r\n\r\n  render() {\r\n      const items=this.state.item.map((data)=>{\r\n       \r\n                return(\r\n                  <div style={{marginBottom:30}}>\r\n               <div style={{display:'flex'}}>\r\n          \r\n               <p style={{margin:0,padding:0 ,marginRight:5,color:'red'}}>{data.fullname} </p>\r\n               <p style={{margin:0,padding:0 ,marginRight:5}}> {data.telnum} </p>\r\n               <p style={{margin:0,padding:0 ,color:'red'}}>  {data.time}</p>\r\n\r\n               </div>\r\n               <p style={{margin:0,padding:0}}>{data.remark}</p>\r\n\r\n               <p style={{margin:0,padding:0}}>{data.date}</p>\r\n               <p style={{margin:0,padding:0,color:'blue'}}>{data.houseno} {data.area}</p>\r\n               <p style={{margin:0,padding:0,marginBottom:5}}>{data.payment}</p>\r\n               <p style={{margin:0,padding:0,marginBottom:5,color:'red'}}>{data.status}</p>\r\n               <h4>orders</h4>\r\n               {data.item.map((hello)=>{\r\n                   return(\r\n                       <div style={{marginBottom:5}}>\r\n                         <div style={{display:'flex'}}>\r\n                   <p style={{margin:0,padding:0,color:'blue',marginRight:5}}>{hello.name} </p>\r\n                   <p style={{margin:0,padding:0,marginRight:5}}> {hello.brand} </p>\r\n                   <p style={{margin:0,padding:0}}> Cost:{hello.cost}</p>\r\n                  </div>\r\n\r\n                  <div style={{display:'flex'}}>\r\n                   <p style={{margin:0,padding:0,marginRight:3,color:'red'}}>{hello.weight} </p>\r\n                   <p>X</p>\r\n                   <p style={{margin:0,padding:0,color:'red',marginLeft:2}}> {hello.quantity}</p>\r\n                </div>\r\n                   </div>\r\n                   )\r\n               })}\r\n             \r\n               <p style={{margin:0,padding:0}}>Total Cost: {data.price}</p>\r\n              \r\n             \r\n               <hr/>\r\n               </div>\r\n               \r\n                )\r\n              \r\n      });\r\n       \r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Orders;\r\n",["173","174"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\reportWebVitals.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\App.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\monthlymanage.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label,Alert } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \r\nimport {baseUrl} from '../baseUrl';\r\nimport DataGrid from 'react-data-grid';\r\n\r\n\r\nconst  array = [];\r\nconst brray=[];\r\nlet Total=0;\r\nlet frequency=0;\r\n\r\nconst columns = [\r\n  { key: 'username', name: 'Username' },\r\n  { key: 'total', name: 'Total' },\r\n  {key:'freq',name:'Freq '},\r\n  {key:'mobilenum',name:'Mobile'},\r\n  {key:'houseno',name:'House'},\r\n  {key:'area',name:'Area'}\r\n];\r\n\r\n\r\n\r\nconst columns2 = [\r\n  { key: 'name', name: 'Name' },\r\n  { key: 'quantity', name: 'Quantity' },\r\n  {key:'cost',name:'Selling cost '},\r\n  {key:'weight',name:'Weight'},\r\n];\r\n\r\n\r\nclass Monthlymanage extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        delivery:[],\r\n        cust:[],\r\n        item:[]\r\n       \r\n       \r\n    }\r\n  }\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n    fetch( baseUrl+'/delivery/display')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({delivery:data.filter(item=>item.date[4]=='J'&&item.date[5]=='u'&&item.date[6]=='n').reverse()})\r\n    })\r\n    .catch(err=>console.log(err))\r\n\r\n    fetch('http://localhost:5050/users')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({cust:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n\r\n    fetch('http://localhost:5050/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n     const custmanage=this.state.cust.map((item)=>{\r\n     \r\n         let totalvalue=0;\r\n         let freq=0;\r\n          this.state.delivery.map((dev)=>{\r\n             if(dev.username==item.username)\r\n             {\r\n             totalvalue+=+dev.price\r\n             freq++;\r\n             }\r\n         })\r\n\r\n         Total=Total+totalvalue;\r\n         frequency=frequency+freq;\r\n        if(freq!=0)\r\n        {\r\n          let ob={}\r\n          ob.username=item.username;\r\n          ob.total=totalvalue;\r\n          ob.freq=freq;\r\n          ob.mobilenum=item.mobilenum;\r\n          ob.area=item.area;\r\n          ob.houseno=item.houseno;\r\n          \r\n\r\n         array.push(ob)\r\n        }   ;\r\n})\r\n\r\nconst itemmanage=this.state.item.map((item)=>{\r\n     \r\n  let quantity=0;\r\n  let cost=0;\r\n   this.state.delivery.map((dev)=>{\r\n     dev.item.map(spitem=>{\r\n       if(spitem.itemid==item.itemid)\r\n       {\r\n          quantity+=+spitem.quantity;\r\n          cost+=+(spitem.cost*spitem.quantity);\r\n       }\r\n     })\r\n})\r\nif(quantity!=0)\r\n {\r\n   let obb={}\r\n   obb.name=item.name;\r\n   obb.quantity=quantity;\r\n   obb.cost=cost;\r\n   obb.weight=item.weight;\r\n  brray.push(obb)\r\n };\r\n})\r\n     \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>    \r\n\r\n         <h1>User Profile</h1>      \r\n          {custmanage}\r\n\r\n          <DataGrid columns={columns} rows={array} />\r\n           <p>Total amount: {Total}   Order count : {frequency}</p>\r\n         \r\n           <h1>Item Profile</h1>   \r\n         {itemmanage}\r\n         {brray.length}\r\n         <DataGrid columns={columns2} rows={brray} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Monthlymanage;\r\n","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\yearlymanage.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\manage.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\dailymanage.js",[],{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"213","line":3,"column":13,"nodeType":"210","messageId":"211","endLine":3,"endColumn":16},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"215","line":3,"column":23,"nodeType":"210","messageId":"211","endLine":3,"endColumn":28},{"ruleId":"208","severity":1,"message":"216","line":3,"column":29,"nodeType":"210","messageId":"211","endLine":3,"endColumn":34},{"ruleId":"208","severity":1,"message":"217","line":9,"column":10,"nodeType":"210","messageId":"211","endLine":9,"endColumn":17},{"ruleId":"208","severity":1,"message":"218","line":9,"column":19,"nodeType":"210","messageId":"211","endLine":9,"endColumn":28},{"ruleId":"208","severity":1,"message":"219","line":9,"column":30,"nodeType":"210","messageId":"211","endLine":9,"endColumn":36},{"ruleId":"208","severity":1,"message":"220","line":10,"column":7,"nodeType":"210","messageId":"211","endLine":10,"endColumn":15},{"ruleId":"208","severity":1,"message":"221","line":11,"column":7,"nodeType":"210","messageId":"211","endLine":11,"endColumn":16},{"ruleId":"208","severity":1,"message":"222","line":12,"column":7,"nodeType":"210","messageId":"211","endLine":12,"endColumn":16},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"223","replacedBy":"227"},{"ruleId":"225","replacedBy":"228"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":97,"column":37,"nodeType":"231","endLine":103,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":119,"column":37,"nodeType":"231","endLine":125,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":141,"column":37,"nodeType":"231","endLine":147,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":161,"column":37,"nodeType":"231","endLine":167,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":182,"column":37,"nodeType":"231","endLine":187,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":203,"column":10,"nodeType":"231","endLine":208,"endColumn":16},{"ruleId":"229","severity":1,"message":"232","line":225,"column":37,"nodeType":"231","endLine":229,"endColumn":42},{"ruleId":"223","replacedBy":"233"},{"ruleId":"225","replacedBy":"234"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"221","line":10,"column":7,"nodeType":"210","messageId":"211","endLine":10,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":73,"column":61,"nodeType":"237","messageId":"238","endLine":73,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":90,"column":37,"nodeType":"231","endLine":97,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":111,"column":37,"nodeType":"231","endLine":118,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":133,"column":37,"nodeType":"231","endLine":140,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":155,"column":37,"nodeType":"231","endLine":161,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":177,"column":10,"nodeType":"231","endLine":183,"endColumn":16},{"ruleId":"229","severity":1,"message":"232","line":200,"column":37,"nodeType":"231","endLine":204,"endColumn":42},{"ruleId":"229","severity":1,"message":"232","line":213,"column":37,"nodeType":"231","endLine":217,"endColumn":42},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"221","line":10,"column":7,"nodeType":"210","messageId":"211","endLine":10,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":73,"column":61,"nodeType":"237","messageId":"238","endLine":73,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":90,"column":37,"nodeType":"231","endLine":97,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":111,"column":37,"nodeType":"231","endLine":118,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":133,"column":37,"nodeType":"231","endLine":140,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":155,"column":37,"nodeType":"231","endLine":161,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":177,"column":10,"nodeType":"231","endLine":183,"endColumn":16},{"ruleId":"229","severity":1,"message":"232","line":199,"column":37,"nodeType":"231","endLine":203,"endColumn":42},{"ruleId":"229","severity":1,"message":"232","line":213,"column":37,"nodeType":"231","endLine":217,"endColumn":42},{"ruleId":"223","replacedBy":"239"},{"ruleId":"225","replacedBy":"240"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"221","line":10,"column":7,"nodeType":"210","messageId":"211","endLine":10,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":73,"column":61,"nodeType":"237","messageId":"238","endLine":73,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":90,"column":37,"nodeType":"231","endLine":97,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":111,"column":37,"nodeType":"231","endLine":118,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":132,"column":37,"nodeType":"231","endLine":139,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":154,"column":37,"nodeType":"231","endLine":160,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":176,"column":10,"nodeType":"231","endLine":182,"endColumn":16},{"ruleId":"229","severity":1,"message":"232","line":199,"column":37,"nodeType":"231","endLine":203,"endColumn":42},{"ruleId":"229","severity":1,"message":"232","line":212,"column":37,"nodeType":"231","endLine":216,"endColumn":42},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"221","line":9,"column":7,"nodeType":"210","messageId":"211","endLine":9,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":73,"column":61,"nodeType":"237","messageId":"238","endLine":73,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":91,"column":37,"nodeType":"231","endLine":98,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":112,"column":37,"nodeType":"231","endLine":119,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":134,"column":37,"nodeType":"231","endLine":141,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":156,"column":37,"nodeType":"231","endLine":162,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":178,"column":10,"nodeType":"231","endLine":184,"endColumn":16},{"ruleId":"229","severity":1,"message":"232","line":201,"column":37,"nodeType":"231","endLine":205,"endColumn":42},{"ruleId":"229","severity":1,"message":"232","line":214,"column":37,"nodeType":"231","endLine":218,"endColumn":42},{"ruleId":"223","replacedBy":"241"},{"ruleId":"225","replacedBy":"242"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"213","line":3,"column":13,"nodeType":"210","messageId":"211","endLine":3,"endColumn":16},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"215","line":3,"column":23,"nodeType":"210","messageId":"211","endLine":3,"endColumn":28},{"ruleId":"208","severity":1,"message":"216","line":3,"column":29,"nodeType":"210","messageId":"211","endLine":3,"endColumn":34},{"ruleId":"208","severity":1,"message":"243","line":5,"column":14,"nodeType":"210","messageId":"211","endLine":5,"endColumn":26},{"ruleId":"208","severity":1,"message":"217","line":9,"column":10,"nodeType":"210","messageId":"211","endLine":9,"endColumn":17},{"ruleId":"208","severity":1,"message":"218","line":9,"column":19,"nodeType":"210","messageId":"211","endLine":9,"endColumn":28},{"ruleId":"208","severity":1,"message":"219","line":9,"column":30,"nodeType":"210","messageId":"211","endLine":9,"endColumn":36},{"ruleId":"208","severity":1,"message":"220","line":10,"column":7,"nodeType":"210","messageId":"211","endLine":10,"endColumn":15},{"ruleId":"208","severity":1,"message":"221","line":11,"column":7,"nodeType":"210","messageId":"211","endLine":11,"endColumn":16},{"ruleId":"208","severity":1,"message":"222","line":12,"column":7,"nodeType":"210","messageId":"211","endLine":12,"endColumn":16},{"ruleId":"223","replacedBy":"244"},{"ruleId":"225","replacedBy":"245"},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"213","line":3,"column":13,"nodeType":"210","messageId":"211","endLine":3,"endColumn":16},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"215","line":3,"column":23,"nodeType":"210","messageId":"211","endLine":3,"endColumn":28},{"ruleId":"208","severity":1,"message":"216","line":3,"column":29,"nodeType":"210","messageId":"211","endLine":3,"endColumn":34},{"ruleId":"235","severity":1,"message":"236","line":52,"column":63,"nodeType":"237","messageId":"238","endLine":52,"endColumn":65},{"ruleId":"235","severity":1,"message":"236","line":52,"column":82,"nodeType":"237","messageId":"238","endLine":52,"endColumn":84},{"ruleId":"235","severity":1,"message":"236","line":52,"column":101,"nodeType":"237","messageId":"238","endLine":52,"endColumn":103},{"ruleId":"246","severity":1,"message":"247","line":75,"column":49,"nodeType":"248","messageId":"249","endLine":75,"endColumn":51},{"ruleId":"246","severity":1,"message":"247","line":79,"column":40,"nodeType":"248","messageId":"249","endLine":79,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":80,"column":29,"nodeType":"237","messageId":"238","endLine":80,"endColumn":31},{"ruleId":"235","severity":1,"message":"250","line":89,"column":16,"nodeType":"237","messageId":"238","endLine":89,"endColumn":18},{"ruleId":"246","severity":1,"message":"247","line":104,"column":44,"nodeType":"248","messageId":"249","endLine":104,"endColumn":46},{"ruleId":"246","severity":1,"message":"247","line":108,"column":33,"nodeType":"248","messageId":"249","endLine":108,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":109,"column":25,"nodeType":"248","messageId":"249","endLine":109,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":110,"column":24,"nodeType":"237","messageId":"238","endLine":110,"endColumn":26},{"ruleId":"235","severity":1,"message":"250","line":117,"column":12,"nodeType":"237","messageId":"238","endLine":117,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"212","line":2,"column":22,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"251","line":3,"column":5,"nodeType":"210","messageId":"211","endLine":3,"endColumn":11},{"ruleId":"208","severity":1,"message":"213","line":3,"column":13,"nodeType":"210","messageId":"211","endLine":3,"endColumn":16},{"ruleId":"208","severity":1,"message":"214","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":21},{"ruleId":"208","severity":1,"message":"215","line":3,"column":23,"nodeType":"210","messageId":"211","endLine":3,"endColumn":28},{"ruleId":"208","severity":1,"message":"217","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":17},{"ruleId":"208","severity":1,"message":"218","line":6,"column":19,"nodeType":"210","messageId":"211","endLine":6,"endColumn":28},{"ruleId":"208","severity":1,"message":"219","line":6,"column":30,"nodeType":"210","messageId":"211","endLine":6,"endColumn":36},{"ruleId":"208","severity":1,"message":"220","line":7,"column":7,"nodeType":"210","messageId":"211","endLine":7,"endColumn":15},{"ruleId":"208","severity":1,"message":"221","line":8,"column":7,"nodeType":"210","messageId":"211","endLine":8,"endColumn":16},{"ruleId":"208","severity":1,"message":"222","line":9,"column":7,"nodeType":"210","messageId":"211","endLine":9,"endColumn":16},{"ruleId":"252","severity":2,"message":"253","line":50,"column":21,"nodeType":"210","messageId":"254","endLine":50,"endColumn":26},{"ruleId":"255","severity":2,"message":"256","line":54,"column":16,"nodeType":"257","endLine":54,"endColumn":25},{"ruleId":"252","severity":2,"message":"253","line":54,"column":33,"nodeType":"210","messageId":"254","endLine":54,"endColumn":38},"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'Alert' is defined but never used.","'Control' is defined but never used.","'LocalForm' is defined but never used.","'Errors' is defined but never used.","'required' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","no-native-reassign",["258"],"no-negated-in-lhs",["259"],["258"],["259"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE",["258"],["259"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["258"],["259"],["258"],["259"],"'confirmAlert' is defined but never used.",["258"],["259"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'Button' is defined but never used.","no-undef","'fruit' is not defined.","undef","react/jsx-no-undef","'OptionBox' is not defined.","JSXIdentifier","no-global-assign","no-unsafe-negation"]