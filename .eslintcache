[{"C:\\Users\\Sanjeet\\Desktop\\support\\src\\index.js":"1","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\insert.js":"2","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\main.js":"3","C:\\Users\\Sanjeet\\Desktop\\support\\src\\reportWebVitals.js":"4","C:\\Users\\Sanjeet\\Desktop\\support\\src\\App.js":"5","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\manage.js":"6","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\milk.js":"7","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\vegetable.js":"8","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\grocery.js":"9"},{"size":641,"mtime":1609516276720,"results":"10","hashOfConfig":"11"},{"size":9085,"mtime":1609527784669,"results":"12","hashOfConfig":"11"},{"size":1385,"mtime":1609527154201,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1609089041974,"results":"14","hashOfConfig":"11"},{"size":349,"mtime":1609516203220,"results":"15","hashOfConfig":"11"},{"size":7239,"mtime":1609525416567,"results":"16","hashOfConfig":"11"},{"size":7292,"mtime":1609527851006,"results":"17","hashOfConfig":"11"},{"size":7290,"mtime":1609536643893,"results":"18","hashOfConfig":"11"},{"size":7274,"mtime":1609526932683,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v2ed5v",{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\Sanjeet\\Desktop\\support\\src\\index.js",[],["41","42"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\insert.js",["43","44","45","46","47","48","49","50","51"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\main.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\reportWebVitals.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\App.js",[],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\manage.js",["52","53","54","55","56","57","58","59"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\milk.js",["60","61","62","63","64","65","66","67","68"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Milk extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delete=this.delete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( 'https://urbanreach.herokuapp.com/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nhandleSubmit({values,item}) {\r\n       \r\n    \r\n    \r\n\r\n      \r\n    var obj={\r\n      description: values.description,\r\n      itemid:item.itemid,\r\n      img: values.img,\r\n      cost:values.cost,\r\n      weight:values.weight,\r\n    }\r\n\r\n   fetch( 'https://urbanreach.herokuapp.com/items',{\r\n      method:\"PUT\",\r\n      headers:{ \"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(obj)\r\n    \r\n  })\r\n  .then(data=>data.json())\r\n  .then(data=>alert(\"updated\"))\r\n  .catch(err=>console.log(err))\r\n};\r\n\r\ndelete(data)\r\n{\r\n    fetch('https://urbanreach.herokuapp.com/items',{\r\n        method:\"DELETE\",\r\n        headers:{ \"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify({itemid:data})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>alert(data))\r\n    .catch(err=>console.log(err))\r\n}\r\n  render() {\r\n\r\n    const items=this.state.item.filter((item)=>item.category==\"milkproduct\").map((item)=>{\r\n  \r\n        return(\r\n    \r\n          <div >\r\n         \r\n             <img src={item.img} alt=\"\"/>\r\n    \r\n             \r\n             <h4 >{item.name}</h4>\r\n             <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit({values,item})}>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        defaultValue={item.description}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.img}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.cost}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             defaultValue={item.weight}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n\r\n                              \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n           \r\n            \r\n\r\n\r\n           <Button onClick={()=>this.delete(item.itemid)} >Delete</Button>\r\n           <hr/>\r\n          </div>\r\n    \r\n    \r\n        )\r\n      })\r\n\r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Milk;\r\n","C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\vegetable.js",["69","70","71","72","73","74","75","76","77"],"C:\\Users\\Sanjeet\\Desktop\\support\\src\\components\\grocery.js",["78","79","80","81","82","83","84","85","86"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Link } from 'react-router-dom';\r\n\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Grocery extends Component {\r\nconstructor(props){\r\n    super()\r\n    this.state={\r\n        item:[]\r\n    }\r\n    this.delete=this.delete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\ncomponentDidMount()\r\n{\r\n    fetch( 'http://192.168.43.220:5050/items')\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n        this.setState({item:data})\r\n    })\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nhandleSubmit({values,item}) {\r\n       \r\n    \r\n    \r\n\r\n      \r\n    var obj={\r\n      description: values.description,\r\n      itemid:item.itemid,\r\n      img: values.img,\r\n      cost:values.cost,\r\n      weight:values.weight,\r\n    }\r\n\r\n   fetch( 'http://192.168.43.220:5050/items',{\r\n      method:\"PUT\",\r\n      headers:{ \"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(obj)\r\n    \r\n  })\r\n  .then(data=>data.json())\r\n  .then(data=>alert(\"updated\"))\r\n  .catch(err=>console.log(err))\r\n};\r\n\r\ndelete(data)\r\n{\r\n    fetch('http://192.168.43.220:5050/items',{\r\n        method:\"DELETE\",\r\n        headers:{ \"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify({itemid:data})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(data=>alert(data))\r\n    .catch(err=>console.log(err))\r\n}\r\n  render() {\r\n\r\n    const items=this.state.item.filter((item)=>item.category==\"grocery\").map((item)=>{\r\n\r\n        return(\r\n    \r\n          <div >\r\n         \r\n             <img src={item.img} alt=\"\"/>\r\n    \r\n             \r\n             <h4 >{item.name}</h4>\r\n             <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit({values,item})}>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" >description</Label>\r\n                                \r\n                                    <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                        placeholder=\"description\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10)\r\n                                        }}\r\n                                        defaultValue={item.description}\r\n                                        />\r\n                                  <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".description\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be equal to 10 numbers'\r\n                                        }}\r\n                                     />\r\n                               </Row>\r\n\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"img\" >Image</Label>\r\n                                    < Control.text model=\".img\" id=\"img\" name=\"img\"\r\n                                        placeholder=\"image address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.img}\r\n                                        />\r\n                                            <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".img\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters',\r\n                                        }}\r\n                                     />\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n\r\n                           <Label htmlFor=\"cost\">Cost</Label>\r\n                                    <Control.text model=\".cost\" id=\"cost\" name=\"cost\"\r\n                                         className=\"form-control\"\r\n                                         validators={{\r\n                                            required, minLength: minLength(1)\r\n                                        }}\r\n                                        defaultValue={item.cost}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".cost\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 1 characters'                        \r\n                                        }}\r\n                                     />\r\n\r\n                          </Row>\r\n\r\n                          <Row className=\"form-group\">\r\n\r\n<Label htmlFor=\"weight\">Weight</Label>\r\n         <Control.text model=\".weight\" id=\"weight\" name=\"weight\"\r\n              className=\"form-control\"\r\n              validators={{\r\n                 required, minLength: minLength(1)\r\n             }}\r\n             defaultValue={item.weight}\r\n             />\r\n              <Errors\r\n             className=\"text-danger\"\r\n             model=\".weight\"\r\n             show=\"touched\"\r\n             messages={{\r\n                 required: 'Required',\r\n                 minLength: 'Must be greater than 1 characters'                        \r\n             }}\r\n          />\r\n\r\n</Row>\r\n\r\n\r\n\r\n                              \r\n                         \r\n                            \r\n                            <Row className=\"form-group\">\r\n                               \r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                             \r\n                                    </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n           \r\n            \r\n\r\n\r\n           <Button onClick={()=>this.delete(item.itemid)} >Delete</Button>\r\n           <hr/>\r\n          </div>\r\n    \r\n    \r\n        )\r\n      })\r\n\r\n      \r\n    return (\r\n      <div>\r\n          <h1>Manage</h1>\r\n\r\n          <Link to={`/insert`} >\r\n               <Button  >Insert Page</Button>\r\n         </Link>          \r\n          {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Grocery;\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":77,"column":37,"nodeType":"99","endLine":83,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":99,"column":37,"nodeType":"99","endLine":105,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":119,"column":37,"nodeType":"99","endLine":125,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":140,"column":37,"nodeType":"99","endLine":145,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":161,"column":10,"nodeType":"99","endLine":166,"endColumn":16},{"ruleId":"97","severity":1,"message":"100","line":183,"column":37,"nodeType":"99","endLine":187,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":21},{"ruleId":"91","severity":1,"message":"101","line":9,"column":7,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":87,"column":37,"nodeType":"99","endLine":94,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":108,"column":37,"nodeType":"99","endLine":115,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":130,"column":37,"nodeType":"99","endLine":136,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":152,"column":10,"nodeType":"99","endLine":158,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":21},{"ruleId":"91","severity":1,"message":"101","line":9,"column":7,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":69,"column":61,"nodeType":"104","messageId":"105","endLine":69,"endColumn":63},{"ruleId":"97","severity":1,"message":"98","line":86,"column":37,"nodeType":"99","endLine":93,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":107,"column":37,"nodeType":"99","endLine":114,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":129,"column":37,"nodeType":"99","endLine":135,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":151,"column":10,"nodeType":"99","endLine":157,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":21},{"ruleId":"91","severity":1,"message":"101","line":9,"column":7,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":69,"column":61,"nodeType":"104","messageId":"105","endLine":69,"endColumn":63},{"ruleId":"97","severity":1,"message":"98","line":87,"column":37,"nodeType":"99","endLine":94,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":108,"column":37,"nodeType":"99","endLine":115,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":130,"column":37,"nodeType":"99","endLine":136,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":152,"column":10,"nodeType":"99","endLine":158,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":3,"column":18,"nodeType":"93","messageId":"94","endLine":3,"endColumn":21},{"ruleId":"91","severity":1,"message":"101","line":9,"column":7,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":69,"column":61,"nodeType":"104","messageId":"105","endLine":69,"endColumn":63},{"ruleId":"97","severity":1,"message":"98","line":86,"column":37,"nodeType":"99","endLine":93,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":107,"column":37,"nodeType":"99","endLine":114,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":129,"column":37,"nodeType":"99","endLine":135,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":151,"column":10,"nodeType":"99","endLine":157,"endColumn":16},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'Col' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","'maxLength' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]